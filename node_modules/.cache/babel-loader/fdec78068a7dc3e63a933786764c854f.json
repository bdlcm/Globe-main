{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\nimport mapData from './mapData.json';\nconst jsonUrl = 'https://unpkg.com/world-atlas@2.0.2/countries-50m.json';\nconst otherUrl = \"https://gist.githubusercontent.com/ArvinH/cec17ab68a8173e29706192da30584ca/raw/1b265e9ec3bf24fa602016bcd82d0e4ac62add80/geonames_cities_100k.geojson\";\nexport const useData = () => {\n  _s();\n\n  // json(mapData, function(data) { console.log(\"mapData\", data); });\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    console.log(\"rendered\"); // json(jsonUrl).then(topojsonData => {\n    //     const {countries,land} = topojsonData.objects;\n    //    setData(\n    //     {\n    //       land: feature(topojsonData, land),\n    //       interiors: mesh(topojsonData, countries, (a, b)=>  a !== b),\n    //       geometry: feature(topojsonData, topojsonData.objects.countries)\n    //      }\n    //   )\n    // });\n  }, []);\n  return data;\n};\n\n_s(useData, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");","map":{"version":3,"names":["React","useState","useEffect","json","feature","mesh","mapData","jsonUrl","otherUrl","useData","data","setData","console","log"],"sources":["/Users/barbaramoahamed/Downloads/Globe-main/src/useData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\nimport mapData from './mapData.json';\nconst jsonUrl =\n  'https://unpkg.com/world-atlas@2.0.2/countries-50m.json';\n\n  const otherUrl =\"https://gist.githubusercontent.com/ArvinH/cec17ab68a8173e29706192da30584ca/raw/1b265e9ec3bf24fa602016bcd82d0e4ac62add80/geonames_cities_100k.geojson\";\n\nexport const useData = () => {\n\n\n  // json(mapData, function(data) { console.log(\"mapData\", data); });\n    const [data, setData] = useState(null);\n \n\n\n  useEffect(() => {\n    console.log(\"rendered\")\n    // json(jsonUrl).then(topojsonData => {\n    //     const {countries,land} = topojsonData.objects;\n  \n \n    //    setData(\n    //     {\n    //       land: feature(topojsonData, land),\n    //       interiors: mesh(topojsonData, countries, (a, b)=>  a !== b),\n    //       geometry: feature(topojsonData, topojsonData.objects.countries)\n          \n    //      }\n    //   )\n    // });\n\n \n  }, []);\n\n \n  return data;\n};"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,IAArB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,iBAA9B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,MAAMC,OAAO,GACX,wDADF;AAGE,MAAMC,QAAQ,GAAE,sJAAhB;AAEF,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAG3B;EACE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;EAIFC,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAR,CAAY,UAAZ,EADc,CAEd;IACA;IAGA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;EAGD,CAjBQ,EAiBN,EAjBM,CAAT;EAoBA,OAAOH,IAAP;AACD,CA7BM;;GAAMD,O"},"metadata":{},"sourceType":"module"}
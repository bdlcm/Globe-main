{"ast":null,"code":"var _jsxFileName = \"/Users/barbaramoahamed/Downloads/Globe-main/src/Globe.js\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { feature, mesh } from 'topojson-client';\nimport { ReactDOM } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Globe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rotation: 0\n    };\n  }\n\n  render() {\n    let projection = d3.geoOrthographic().fitSize([this.props.size, this.props.size], this.props.geoJson).rotate([this.state.rotation]);\n    let geoGenerator = d3.geoPath().projection(projection);\n    let pathString = geoGenerator(this.props.geoJson);\n    window.requestAnimationFrame(() => {\n      this.setState({\n        rotation: this.state.rotation + 0.2\n      });\n    });\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: this.props.size,\n      height: this.props.size,\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: pathString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","d3","feature","mesh","ReactDOM","Globe","Component","constructor","props","state","rotation","render","projection","geoOrthographic","fitSize","size","geoJson","rotate","geoGenerator","geoPath","pathString","window","requestAnimationFrame","setState"],"sources":["/Users/barbaramoahamed/Downloads/Globe-main/src/Globe.js"],"sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\";\nimport { feature, mesh } from 'topojson-client';\nimport { ReactDOM } from \"react\";\n\nexport class Globe extends React.Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      rotation: 0\n    }\n  }\n  \n  render() {\n    let projection = d3.geoOrthographic()\n      .fitSize([this.props.size, this.props.size], this.props.geoJson)\n      .rotate([this.state.rotation])\n    \n    let geoGenerator = d3.geoPath()\n      .projection(projection)\n    \n    let pathString = geoGenerator(this.props.geoJson)\n\n    window.requestAnimationFrame(() => {\n      this.setState({\n        rotation: this.state.rotation + 0.2\n      })\n    })\n    \n    return <svg width={this.props.size} height={this.props.size} >\n      <path d={pathString} />\n    </svg>\n  }\n}\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,iBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;EACzCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACXC,QAAQ,EAAE;IADC,CAAb;EAGD;;EAEDC,MAAM,GAAG;IACP,IAAIC,UAAU,GAAGX,EAAE,CAACY,eAAH,GACdC,OADc,CACN,CAAC,KAAKN,KAAL,CAAWO,IAAZ,EAAkB,KAAKP,KAAL,CAAWO,IAA7B,CADM,EAC8B,KAAKP,KAAL,CAAWQ,OADzC,EAEdC,MAFc,CAEP,CAAC,KAAKR,KAAL,CAAWC,QAAZ,CAFO,CAAjB;IAIA,IAAIQ,YAAY,GAAGjB,EAAE,CAACkB,OAAH,GAChBP,UADgB,CACLA,UADK,CAAnB;IAGA,IAAIQ,UAAU,GAAGF,YAAY,CAAC,KAAKV,KAAL,CAAWQ,OAAZ,CAA7B;IAEAK,MAAM,CAACC,qBAAP,CAA6B,MAAM;MACjC,KAAKC,QAAL,CAAc;QACZb,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,GAAsB;MADpB,CAAd;IAGD,CAJD;IAMA,oBAAO;MAAK,KAAK,EAAE,KAAKF,KAAL,CAAWO,IAAvB;MAA6B,MAAM,EAAE,KAAKP,KAAL,CAAWO,IAAhD;MAAA,uBACL;QAAM,CAAC,EAAEK;MAAT;QAAA;QAAA;QAAA;MAAA;IADK;MAAA;MAAA;MAAA;IAAA,QAAP;EAGD;;AA5BwC"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\nimport mapData from './mapData.json';\nconst jsonUrl = 'https://unpkg.com/world-atlas@2.0.2/countries-50m.json';\nconst otherUrl = \"https://gist.githubusercontent.com/ArvinH/cec17ab68a8173e29706192da30584ca/raw/1b265e9ec3bf24fa602016bcd82d0e4ac62add80/geonames_cities_100k.geojson\";\nexport const useData = () => {\n  _s();\n\n  const [data, setData] = useState(null); // const [popData, setPopData] = useState(null);\n  // useEffect(() => {\n  //   json(otherUrl).then(topojsonData => {\n  //     console.log( \"popdata\", topojsonData);\n  //     //  const {countries,land} = topojsonData.objects;\n  //      setPopData(\n  //       {\n  //         pop: feature(topojsonData, topojsonData.features),\n  //        }\n  //     )\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    json(jsonUrl, function (topojsonData) {\n      const {\n        countries,\n        land\n      } = topojsonData.objects;\n      setData({\n        land: feature(topojsonData, land),\n        interiors: mesh(topojsonData, countries, (a, b) => a !== b),\n        geometry: feature(topojsonData, topojsonData.objects.countries)\n      });\n    });\n  }, []);\n  return data;\n};\n\n_s(useData, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");","map":{"version":3,"names":["React","useState","useEffect","json","feature","mesh","mapData","jsonUrl","otherUrl","useData","data","setData","topojsonData","countries","land","objects","interiors","a","b","geometry"],"sources":["/Users/barbaramoahamed/Downloads/Globe-main/src/useData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\nimport mapData from './mapData.json';\nconst jsonUrl =\n  'https://unpkg.com/world-atlas@2.0.2/countries-50m.json';\n\n  const otherUrl =\"https://gist.githubusercontent.com/ArvinH/cec17ab68a8173e29706192da30584ca/raw/1b265e9ec3bf24fa602016bcd82d0e4ac62add80/geonames_cities_100k.geojson\";\n\nexport const useData = () => {\n\n\n   const [data, setData] = useState(null);\n  // const [popData, setPopData] = useState(null);\n  \n  // useEffect(() => {\n  //   json(otherUrl).then(topojsonData => {\n  //     console.log( \"popdata\", topojsonData);\n\n   \n  //     //  const {countries,land} = topojsonData.objects;\n  \n \n  //      setPopData(\n  //       {\n  //         pop: feature(topojsonData, topojsonData.features),\n \n          \n  //        }\n  //     )\n  //   });\n\n  // }, []);\n\n\n\n  useEffect(() => {\n  \n\n    json(jsonUrl, function(topojsonData) { \n      \n      const {countries,land} = topojsonData.objects;\n  \n \n      setData(\n       {\n         land: feature(topojsonData, land),\n         interiors: mesh(topojsonData, countries, (a, b)=>  a !== b),\n         geometry: feature(topojsonData, topojsonData.objects.countries)\n         \n        }\n     )\n   });\n\n\n }, []);\n\n\n \n\n  return data;\n};"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,IAArB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,iBAA9B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,MAAMC,OAAO,GACX,wDADF;AAGE,MAAMC,QAAQ,GAAE,sJAAhB;AAEF,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAG1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC,CAH0B,CAI3B;EAEA;EACA;EACA;EAGA;EAGA;EACA;EACA;EAGA;EACA;EACA;EAEA;;EAIAC,SAAS,CAAC,MAAM;IAGdC,IAAI,CAACI,OAAD,EAAU,UAASK,YAAT,EAAuB;MAEnC,MAAM;QAACC,SAAD;QAAWC;MAAX,IAAmBF,YAAY,CAACG,OAAtC;MAGAJ,OAAO,CACN;QACEG,IAAI,EAAEV,OAAO,CAACQ,YAAD,EAAeE,IAAf,CADf;QAEEE,SAAS,EAAEX,IAAI,CAACO,YAAD,EAAeC,SAAf,EAA0B,CAACI,CAAD,EAAIC,CAAJ,KAAUD,CAAC,KAAKC,CAA1C,CAFjB;QAGEC,QAAQ,EAAEf,OAAO,CAACQ,YAAD,EAAeA,YAAY,CAACG,OAAb,CAAqBF,SAApC;MAHnB,CADM,CAAP;IAQF,CAbI,CAAJ;EAgBF,CAnBS,EAmBP,EAnBO,CAAT;EAwBA,OAAOH,IAAP;AACD,CApDM;;GAAMD,O"},"metadata":{},"sourceType":"module"}
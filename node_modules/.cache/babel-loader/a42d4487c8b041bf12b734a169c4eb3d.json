{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\nimport { feature, mesh } from \"topojson-client\";\nimport mapData from \"./mapData.json\";\nconst jsonUrl = \"https://unpkg.com/world-atlas@2.0.2/countries-50m.json\";\nexport const useData = () => {\n  _s();\n\n  // json(mapData, function(data) { console.log(\"mapData\", data); });\n  // console.log(mapData);\n  const [data, setData] = useState(null); // const [popData, setPopData] = useState(null);\n  // useEffect(() => {\n  //   json(otherUrl).then((topojsonData) => {\n  //     console.log(\"popdata\", topojsonData);\n  //     //  const {countries,land} = topojsonData.objects;\n  //     setPopData({\n  //       pop: feature(topojsonData, topojsonData.features),\n  //     });\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"rendered\");\n    json(jsonUrl).then(topojsonData => {\n      console.log(\"rendered\", topojsonData);\n      const {\n        countries,\n        land\n      } = topojsonData.objects;\n      setData({\n        land: feature(topojsonData, land),\n        interiors: mesh(topojsonData, countries, (a, b) => a !== b),\n        geometry: feature(topojsonData, topojsonData.objects.countries)\n      });\n    });\n  }, []);\n  return data;\n};\n\n_s(useData, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");","map":{"version":3,"names":["React","useState","useEffect","json","feature","mesh","mapData","jsonUrl","useData","data","setData","console","log","then","topojsonData","countries","land","objects","interiors","a","b","geometry"],"sources":["/Users/barbaramoahamed/Downloads/Globe-main/src/useData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\nimport { feature, mesh } from \"topojson-client\";\nimport mapData from \"./mapData.json\";\nconst jsonUrl = \"https://unpkg.com/world-atlas@2.0.2/countries-50m.json\";\n\n \n\nexport const useData = () => {\n\n   // json(mapData, function(data) { console.log(\"mapData\", data); });\n  // console.log(mapData);\n   const [data, setData] = useState(null);\n  // const [popData, setPopData] = useState(null);\n\n  // useEffect(() => {\n  //   json(otherUrl).then((topojsonData) => {\n  //     console.log(\"popdata\", topojsonData);\n\n  //     //  const {countries,land} = topojsonData.objects;\n\n  //     setPopData({\n  //       pop: feature(topojsonData, topojsonData.features),\n  //     });\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"rendered\");\n\n    json(jsonUrl).then((topojsonData) => {\n      console.log(\"rendered\", topojsonData);\n      const { countries, land } = topojsonData.objects;\n\n      setData({\n        land: feature(topojsonData, land),\n        interiors: mesh(topojsonData, countries, (a, b) => a !== b),\n        geometry: feature(topojsonData, topojsonData.objects.countries),\n      });\n    });\n\n\n  }, []);\n\n \n  return data;\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,IAArB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,iBAA9B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,MAAMC,OAAO,GAAG,wDAAhB;AAIA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAE1B;EACD;EACC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC,CAJ0B,CAK3B;EAEA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACdS,OAAO,CAACC,GAAR,CAAY,UAAZ;IAEAT,IAAI,CAACI,OAAD,CAAJ,CAAcM,IAAd,CAAoBC,YAAD,IAAkB;MACnCH,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,YAAxB;MACA,MAAM;QAAEC,SAAF;QAAaC;MAAb,IAAsBF,YAAY,CAACG,OAAzC;MAEAP,OAAO,CAAC;QACNM,IAAI,EAAEZ,OAAO,CAACU,YAAD,EAAeE,IAAf,CADP;QAENE,SAAS,EAAEb,IAAI,CAACS,YAAD,EAAeC,SAAf,EAA0B,CAACI,CAAD,EAAIC,CAAJ,KAAUD,CAAC,KAAKC,CAA1C,CAFT;QAGNC,QAAQ,EAAEjB,OAAO,CAACU,YAAD,EAAeA,YAAY,CAACG,OAAb,CAAqBF,SAApC;MAHX,CAAD,CAAP;IAKD,CATD;EAYD,CAfQ,EAeN,EAfM,CAAT;EAkBA,OAAON,IAAP;AACD,CAtCM;;GAAMD,O"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\nimport mapData from './mapData.json';\nconst jsonUrl = 'https://unpkg.com/world-atlas@2.0.2/countries-50m.json';\nconst url = \"https://unpkg.com/world-atlas@2.0.2/countries-50m.json\";\nexport const useData = () => {\n  _s();\n\n  //   d3.json('https://unpkg.com/world-atlas@2.0.2/countries-50m.json', (err, json) => {\n  //   let geoJson =  feature(json, json.objects.ne_110m_admin_0_countries) \n  //   ReactDOM.render(\n  //     <Globe geoJson={geoJson} size={400} />,\n  //   )\n  // }\n  // json(mapData, function(data) { console.log(\"mapData\", data); });\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    json(url).then(topojsonData => {\n      // const {countries,land} = topojsonData.objects;\n      let geoJson = feature(topojsonData, topojsonData.objects.ne_110m_admin_0_countries);\n      setData(geoJson); //  setData(\n      //   {\n      //     land: feature(topojsonData, land),\n      //     interiors: mesh(topojsonData, countries, (a, b)=>  a !== b),\n      //     geometry: feature(topojsonData, topojsonData.objects.countries)\n      //  }\n      // )\n    });\n  }, []);\n  return data;\n};\n\n_s(useData, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");","map":{"version":3,"names":["React","useState","useEffect","json","feature","mesh","mapData","jsonUrl","url","useData","data","setData","then","topojsonData","geoJson","objects","ne_110m_admin_0_countries"],"sources":["/Users/barbaramoahamed/Downloads/Globe-main/src/useData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\nimport mapData from './mapData.json';\nconst jsonUrl =\n  'https://unpkg.com/world-atlas@2.0.2/countries-50m.json';\n\n\n  const url = \"https://unpkg.com/world-atlas@2.0.2/countries-50m.json\";\n\n \nexport const useData = () => {\n\n\n//   d3.json('https://unpkg.com/world-atlas@2.0.2/countries-50m.json', (err, json) => {\n//   let geoJson =  feature(json, json.objects.ne_110m_admin_0_countries) \n\n//   ReactDOM.render(\n//     <Globe geoJson={geoJson} size={400} />,\n \n//   )\n// }\n  \n\n\n  // json(mapData, function(data) { console.log(\"mapData\", data); });\n    const [data, setData] = useState(null);\n \n\n\n  useEffect(() => {\n     json(url).then(topojsonData => {\n        // const {countries,land} = topojsonData.objects;\n        let geoJson =  feature(topojsonData, topojsonData.objects.ne_110m_admin_0_countries);\n\n          setData(geoJson);\n\n \n      //  setData(\n      //   {\n      //     land: feature(topojsonData, land),\n      //     interiors: mesh(topojsonData, countries, (a, b)=>  a !== b),\n      //     geometry: feature(topojsonData, topojsonData.objects.countries)\n          \n        //  }\n     // )\n    });\n\n \n  }, []);\n \n \n  return data;\n \n};"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,IAArB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,iBAA9B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,MAAMC,OAAO,GACX,wDADF;AAIE,MAAMC,GAAG,GAAG,wDAAZ;AAGF,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAG7B;EACA;EAEA;EACA;EAEA;EACA;EAIE;EACE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;EAIFC,SAAS,CAAC,MAAM;IACbC,IAAI,CAACK,GAAD,CAAJ,CAAUI,IAAV,CAAeC,YAAY,IAAI;MAC5B;MACA,IAAIC,OAAO,GAAIV,OAAO,CAACS,YAAD,EAAeA,YAAY,CAACE,OAAb,CAAqBC,yBAApC,CAAtB;MAEEL,OAAO,CAACG,OAAD,CAAP,CAJ0B,CAO9B;MACA;MACA;MACA;MACA;MAEE;MACH;IACA,CAfA;EAkBF,CAnBQ,EAmBN,EAnBM,CAAT;EAsBA,OAAOJ,IAAP;AAED,CA3CM;;GAAMD,O"},"metadata":{},"sourceType":"module"}
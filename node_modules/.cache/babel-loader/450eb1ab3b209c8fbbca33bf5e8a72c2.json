{"ast":null,"code":"var _jsxFileName = \"/Users/barbaramoahamed/Downloads/Globe-main/src/Globe.js\",\n    _s = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport { geoOrthographic, geoPath, scaleLinear, geoGraticule } from \"d3\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Globe = _ref => {\n  _s();\n\n  let {\n    data: {\n      land,\n      geometry\n    }\n  } = _ref;\n  useEffect(() => {\n    renderD3Globe();\n  }, []);\n\n  const renderD3Globe = () => {\n    const width = 400,\n          height = 400;\n    const projection = geoOrthographic().scale(200).translate([width / 2, height / 2]).clipAngle(90);\n    const path = geoPath(projection);\n    const graticule = geoGraticule();\n    const λ = scaleLinear().domain([0, width]).range([-180, 180]);\n    const φ = scaleLinear().domain([0, height]).range([90, -90]);\n    const svg = d3.select(\"#marks\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n    const sphere = svg.append(\"path\").attr(\"class\", \"sphere\").attr(\"d\", path());\n    sphere.append(\"path\").datum(land).attr(\"class\", \"land\").attr(\"d\", path);\n    svg.append(\"path\").attr(\"class\", \"graticule\").attr(\"d\", path(graticule()));\n    svg.append(\"path\").datum(geometry).attr(\"class\", \"interiors\").attr(\"d\", geometry);\n    const scrollSpeed = 50;\n    let current = 0;\n\n    function bgscroll() {\n      current += 1;\n      projection.rotate([λ(current), 0]);\n      svg.selectAll(\"path\").attr(\"d\", path);\n    }\n\n    setInterval(bgscroll, scrollSpeed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"marks\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Globe, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Globe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Globe\");","map":{"version":3,"names":["d3","geoOrthographic","geoPath","scaleLinear","geoGraticule","React","useState","useEffect","Globe","data","land","geometry","renderD3Globe","width","height","projection","scale","translate","clipAngle","path","graticule","λ","domain","range","φ","svg","select","append","attr","sphere","datum","scrollSpeed","current","bgscroll","rotate","selectAll","setInterval"],"sources":["/Users/barbaramoahamed/Downloads/Globe-main/src/Globe.js"],"sourcesContent":["import * as d3 from 'd3';\nimport { geoOrthographic, geoPath, scaleLinear, geoGraticule} from \"d3\";\n\n \nimport React, { useState, useEffect } from 'react';\n\n \n\n\n\nexport const Globe = ({data: { land, geometry } }) => {\n \n\n \n\n\n  useEffect(() => {\n\n    renderD3Globe();\n \n \n  }, []);\n\n  const renderD3Globe = () =>{\n    const width = 400, height = 400;\n\n    const projection = geoOrthographic()\n        .scale(200)\n        .translate([width / 2, height / 2])\n        .clipAngle(90);\n    \n        const path = geoPath(projection);\n    \n        const graticule =  geoGraticule();\n\n        const λ = scaleLinear()\n        .domain([0, width])\n        .range([-180, 180]);\n    \n        const φ =  scaleLinear()\n        .domain([0, height])\n        .range([90, -90]);\n    \n        const svg = d3.select(\"#marks\").append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n       const sphere = svg.append(\"path\")\n         .attr(\"class\", \"sphere\")\n        .attr(\"d\", path());\n            \n      sphere.append(\"path\")\n      .datum(land)\n      .attr(\"class\", \"land\")\n      .attr(\"d\", path);\n      \n      svg.append(\"path\")\n       .attr(\"class\", \"graticule\")\n      .attr(\"d\", path(graticule()));\n\n      svg.append(\"path\")\n      .datum(geometry)\n      .attr(\"class\", \"interiors\")\n      .attr(\"d\", (geometry));\n      \n\n\nconst scrollSpeed = 50; \n\nlet current = 0;\n    function bgscroll(){\ncurrent += 1;\nprojection.rotate([λ(current), 0]);\n   svg.selectAll(\"path\").attr(\"d\", path);\n\n\n}\n\n\n     setInterval(bgscroll, scrollSpeed);  \n  }\n\n \n \n \n \n\n  return (\n\n   <g id='marks'>\n{/* <div className=\"sphere\"></div> */}\n   </g>\n\n   );\n};\n"],"mappings":";;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,YAAhD,QAAmE,IAAnE;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAMA,OAAO,MAAMC,KAAK,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAACC,IAAI,EAAE;MAAEC,IAAF;MAAQC;IAAR;EAAP,CAAgC;EAMpDJ,SAAS,CAAC,MAAM;IAEdK,aAAa;EAGd,CALQ,EAKN,EALM,CAAT;;EAOA,MAAMA,aAAa,GAAG,MAAK;IACzB,MAAMC,KAAK,GAAG,GAAd;IAAA,MAAmBC,MAAM,GAAG,GAA5B;IAEA,MAAMC,UAAU,GAAGd,eAAe,GAC7Be,KADc,CACR,GADQ,EAEdC,SAFc,CAEJ,CAACJ,KAAK,GAAG,CAAT,EAAYC,MAAM,GAAG,CAArB,CAFI,EAGdI,SAHc,CAGJ,EAHI,CAAnB;IAKI,MAAMC,IAAI,GAAGjB,OAAO,CAACa,UAAD,CAApB;IAEA,MAAMK,SAAS,GAAIhB,YAAY,EAA/B;IAEA,MAAMiB,CAAC,GAAGlB,WAAW,GACpBmB,MADS,CACF,CAAC,CAAD,EAAIT,KAAJ,CADE,EAETU,KAFS,CAEH,CAAC,CAAC,GAAF,EAAO,GAAP,CAFG,CAAV;IAIA,MAAMC,CAAC,GAAIrB,WAAW,GACrBmB,MADU,CACH,CAAC,CAAD,EAAIR,MAAJ,CADG,EAEVS,KAFU,CAEJ,CAAC,EAAD,EAAK,CAAC,EAAN,CAFI,CAAX;IAIA,MAAME,GAAG,GAAGzB,EAAE,CAAC0B,MAAH,CAAU,QAAV,EAAoBC,MAApB,CAA2B,KAA3B,EACXC,IADW,CACN,OADM,EACGf,KADH,EAEXe,IAFW,CAEN,QAFM,EAEId,MAFJ,CAAZ;IAID,MAAMe,MAAM,GAAGJ,GAAG,CAACE,MAAJ,CAAW,MAAX,EACZC,IADY,CACP,OADO,EACE,QADF,EAEbA,IAFa,CAER,GAFQ,EAEHT,IAAI,EAFD,CAAf;IAIDU,MAAM,CAACF,MAAP,CAAc,MAAd,EACCG,KADD,CACOpB,IADP,EAECkB,IAFD,CAEM,OAFN,EAEe,MAFf,EAGCA,IAHD,CAGM,GAHN,EAGWT,IAHX;IAKAM,GAAG,CAACE,MAAJ,CAAW,MAAX,EACEC,IADF,CACO,OADP,EACgB,WADhB,EAECA,IAFD,CAEM,GAFN,EAEWT,IAAI,CAACC,SAAS,EAAV,CAFf;IAIAK,GAAG,CAACE,MAAJ,CAAW,MAAX,EACCG,KADD,CACOnB,QADP,EAECiB,IAFD,CAEM,OAFN,EAEe,WAFf,EAGCA,IAHD,CAGM,GAHN,EAGYjB,QAHZ;IAON,MAAMoB,WAAW,GAAG,EAApB;IAEA,IAAIC,OAAO,GAAG,CAAd;;IACI,SAASC,QAAT,GAAmB;MACvBD,OAAO,IAAI,CAAX;MACAjB,UAAU,CAACmB,MAAX,CAAkB,CAACb,CAAC,CAACW,OAAD,CAAF,EAAa,CAAb,CAAlB;MACGP,GAAG,CAACU,SAAJ,CAAc,MAAd,EAAsBP,IAAtB,CAA2B,GAA3B,EAAgCT,IAAhC;IAGF;;IAGIiB,WAAW,CAACH,QAAD,EAAWF,WAAX,CAAX;EACF,CAzDD;;EAgEA,oBAEC;IAAG,EAAE,EAAC;EAAN;IAAA;IAAA;IAAA;EAAA,QAFD;AAOD,CApFM;;GAAMvB,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}